#include "coins.h"
#include "main.h"

Coins::Coins(float x, float y, color_t color) {
    this->position = glm::vec3(x, y, 0);
    this->rotation = 0;
    ratio_y = 7;
    ratio_z = 10;
    // Our vertices. Three consecutive floats give a 3D vertex; Three consecutive vertices give a triangle.
    // A cube has 6 faces with 2 triangles each, so this makes 6*2=12 triangles, and 12*3 vertices
    static const GLfloat vertex_buffer_data[] = {
        0.0f, 0.041584447017844646f, 0.0020930173176437793f,
        0.0f, 0.041338112554769914f, 0.004177774452143475f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.041338112554769914f, 0.004177774452143475f,
        0.0f, 0.0409286354470287f, 0.006246043819524154f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.0409286354470287f, 0.006246043819524154f,
        0.0f, 0.040357631713692964f, 0.00828966290549516f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.040357631713692964f, 0.00828966290549516f,
        0.0f, 0.039627354845631395f, 0.010300566479164913f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.039627354845631395f, 0.010300566479164913f,
        0.0f, 0.03874068691201048f, 0.012270818422822597f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.03874068691201047f, 0.0122708184228226f,
        0.0f, 0.03770112718608414f, 0.01419264305216909f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.03770112718608414f, 0.01419264305216909f,
        0.0f, 0.036512778335160985f, 0.01605845580339051f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.036512778335160985f, 0.01605845580339051f,
        0.0f, 0.03518033022925063f, 0.017860893165966556f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.03518033022925063f, 0.017860893165966556f,
        0.0f, 0.03370904143228948f, 0.01959284174308244f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.03370904143228948f, 0.01959284174308244f,
        0.0f, 0.03210471844899122f, 0.021247466324956322f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.03210471844899122f, 0.021247466324956325f,
        0.0f, 0.030373692809225483f, 0.022818236864289625f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.030373692809225483f, 0.022818236864289625f,
        0.0f, 0.028522796080362026f, 0.024298954247380385f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.028522796080362026f, 0.024298954247380385f,
        0.0f, 0.026559332906195405f, 0.025683774759192975f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.0265593329061954f, 0.025683774759192975f,
        0.0f, 0.024491052178853043f, 0.026967233145831583f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.024491052178853043f, 0.026967233145831583f,
        0.0f, 0.02232611645745819f, 0.028144264183400502f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.02232611645745819f, 0.028144264183400502f,
        0.0f, 0.020073069754238133f, 0.02921022266812879f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.020073069754238133f, 0.02921022266812879f,
        0.0f, 0.017740803815211353f, 0.03016090174886732f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.01774080381521136f, 0.03016090174886732f,
        0.0f, 0.015338523028528244f, 0.030992549529608383f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.015338523028528244f, 0.030992549529608383f,
        0.0f, 0.012875708098956136f, 0.03170188387650512f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.012875708098956143f, 0.03170188387650512f,
        0.0f, 0.010362078631868948f, 0.03228610537095437f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.010362078631868948f, 0.03228610537095437f,
        0.0f, 0.007807554774405188f, 0.03274290835762296f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.007807554774405188f, 0.03274290835762296f,
        0.0f, 0.005222218065179335f, 0.03307049004381593f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.005222218065179344f, 0.03307049004381593f,
        0.0f, 0.002616271647054721f, 0.03326755761427572f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.002616271647054721f, 0.03326755761427572f,
        0.0f, -6.700511040319318e-18f, 0.03333333333333333f,
        0.0f, 0.0f, 0.0f,


        0.0f, -6.700511040319318e-18f, 0.03333333333333333f,
        0.0f, -0.0026162716470547343f, 0.03326755761427572f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.002616271647054725f, 0.03326755761427572f,
        0.0f, -0.005222218065179349f, 0.033070490043815924f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.005222218065179349f, 0.033070490043815924f,
        0.0f, -0.007807554774405201f, 0.03274290835762295f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.007807554774405201f, 0.03274290835762295f,
        0.0f, -0.010362078631868962f, 0.03228610537095437f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.010362078631868952f, 0.03228610537095437f,
        0.0f, -0.012875708098956148f, 0.03170188387650512f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.012875708098956148f, 0.03170188387650512f,
        0.0f, -0.015338523028528258f, 0.03099254952960838f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.015338523028528249f, 0.03099254952960838f,
        0.0f, -0.017740803815211363f, 0.030160901748867316f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.017740803815211363f, 0.030160901748867316f,
        0.0f, -0.020073069754238143f, 0.029210222668128782f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.020073069754238143f, 0.029210222668128782f,
        0.0f, -0.022326116457458203f, 0.0281442641834005f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.022326116457458203f, 0.0281442641834005f,
        0.0f, -0.02449105217885306f, 0.026967233145831573f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.024491052178853043f, 0.026967233145831583f,
        0.0f, -0.026559332906195405f, 0.025683774759192975f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.026559332906195405f, 0.025683774759192975f,
        0.0f, -0.02852279608036203f, 0.02429895424738038f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.02852279608036203f, 0.02429895424738038f,
        0.0f, -0.030373692809225486f, 0.022818236864289618f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.030373692809225486f, 0.022818236864289618f,
        0.0f, -0.032104718448991224f, 0.02124746632495632f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.032104718448991224f, 0.02124746632495632f,
        0.0f, -0.033709041432289484f, 0.019592841743082425f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.03370904143228947f, 0.019592841743082443f,
        0.0f, -0.03518033022925063f, 0.017860893165966556f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.03518033022925063f, 0.017860893165966556f,
        0.0f, -0.036512778335160985f, 0.016058455803390506f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.036512778335160985f, 0.016058455803390506f,
        0.0f, -0.03770112718608415f, 0.014192643052169083f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.03770112718608415f, 0.014192643052169083f,
        0.0f, -0.03874068691201048f, 0.012270818422822592f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.03874068691201048f, 0.012270818422822592f,
        0.0f, -0.0396273548456314f, 0.010300566479164905f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.0396273548456314f, 0.010300566479164905f,
        0.0f, -0.040357631713692964f, 0.008289662905495146f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.040357631713692964f, 0.008289662905495161f,
        0.0f, -0.0409286354470287f, 0.006246043819524152f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.0409286354470287f, 0.006246043819524152f,
        0.0f, -0.041338112554769914f, 0.00417777445214347f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.041338112554769914f, 0.00417777445214347f,
        0.0f, -0.041584447017844646f, 0.002093017317643771f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.041584447017844646f, 0.002093017317643771f,
        0.0f, -0.041666666666666664f, -1.072081766451091e-17f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.041666666666666664f, -1.072081766451091e-17f,
        0.0f, -0.041584447017844646f, -0.0020930173176437927f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.041584447017844646f, -0.002093017317643778f,
        0.0f, -0.041338112554769914f, -0.004177774452143476f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.041338112554769914f, -0.004177774452143476f,
        0.0f, -0.04092863544702869f, -0.006246043819524159f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.04092863544702869f, -0.006246043819524159f,
        0.0f, -0.040357631713692964f, -0.008289662905495166f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.040357631713692964f, -0.008289662905495166f,
        0.0f, -0.039627354845631395f, -0.010300566479164924f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.039627354845631395f, -0.010300566479164924f,
        0.0f, -0.03874068691201047f, -0.01227081842282261f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.03874068691201047f, -0.01227081842282261f,
        0.0f, -0.03770112718608414f, -0.014192643052169104f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.03770112718608414f, -0.014192643052169088f,
        0.0f, -0.03651277833516098f, -0.016058455803390513f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.03651277833516098f, -0.016058455803390513f,
        0.0f, -0.03518033022925062f, -0.01786089316596656f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.03518033022925062f, -0.01786089316596656f,
        0.0f, -0.03370904143228947f, -0.019592841743082446f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.03370904143228947f, -0.019592841743082446f,
        0.0f, -0.03210471844899121f, -0.021247466324956332f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.03210471844899121f, -0.021247466324956332f,
        0.0f, -0.03037369280922547f, -0.022818236864289635f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.030373692809225483f, -0.022818236864289625f,
        0.0f, -0.028522796080362026f, -0.024298954247380385f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.028522796080362026f, -0.024298954247380385f,
        0.0f, -0.026559332906195398f, -0.02568377475919298f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.026559332906195398f, -0.02568377475919298f,
        0.0f, -0.024491052178853053f, -0.02696723314583158f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.024491052178853053f, -0.02696723314583158f,
        0.0f, -0.022326116457458214f, -0.028144264183400495f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.02232611645745818f, -0.02814426418340051f,
        0.0f, -0.020073069754238136f, -0.029210222668128786f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.020073069754238136f, -0.029210222668128786f,
        0.0f, -0.017740803815211374f, -0.030160901748867312f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.01774080381521134f, -0.030160901748867326f,
        0.0f, -0.015338523028528242f, -0.030992549529608383f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.015338523028528242f, -0.030992549529608383f,
        0.0f, -0.012875708098956148f, -0.03170188387650512f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.012875708098956148f, -0.03170188387650512f,
        0.0f, -0.01036207863186897f, -0.03228610537095437f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.010362078631868934f, -0.032286105370954374f,
        0.0f, -0.007807554774405193f, -0.03274290835762296f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.007807554774405193f, -0.03274290835762296f,
        0.0f, -0.005222218065179358f, -0.033070490043815924f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.005222218065179322f, -0.03307049004381593f,
        0.0f, -0.002616271647054717f, -0.03326755761427572f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.002616271647054717f, -0.03326755761427572f,
        0.0f, -7.654042494670958e-18f, -0.03333333333333333f,
        0.0f, 0.0f, 0.0f,


        0.0f, -7.654042494670958e-18f, -0.03333333333333333f,
        0.0f, 0.0026162716470547014f, -0.03326755761427572f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.0026162716470547382f, -0.03326755761427572f,
        0.0f, 0.005222218065179343f, -0.03307049004381593f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.005222218065179343f, -0.03307049004381593f,
        0.0f, 0.0078075547744051775f, -0.03274290835762296f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.007807554774405214f, -0.03274290835762295f,
        0.0f, 0.010362078631868955f, -0.03228610537095437f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.010362078631868955f, -0.03228610537095437f,
        0.0f, 0.012875708098956135f, -0.03170188387650512f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.012875708098956135f, -0.03170188387650512f,
        0.0f, 0.015338523028528226f, -0.030992549529608386f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.015338523028528261f, -0.030992549529608376f,
        0.0f, 0.01774080381521136f, -0.03016090174886732f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.01774080381521136f, -0.03016090174886732f,
        0.0f, 0.020073069754238122f, -0.029210222668128793f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.020073069754238154f, -0.02921022266812878f,
        0.0f, 0.0223261164574582f, -0.0281442641834005f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.0223261164574582f, -0.0281442641834005f,
        0.0f, 0.02449105217885304f, -0.026967233145831587f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.02449105217885307f, -0.026967233145831566f,
        0.0f, 0.026559332906195415f, -0.02568377475919297f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.026559332906195415f, -0.02568377475919297f,
        0.0f, 0.028522796080362026f, -0.024298954247380385f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.028522796080362026f, -0.024298954247380385f,
        0.0f, 0.03037369280922547f, -0.02281823686428963f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.030373692809225496f, -0.02281823686428961f,
        0.0f, 0.032104718448991224f, -0.021247466324956322f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.032104718448991224f, -0.021247466324956322f,
        0.0f, 0.03370904143228947f, -0.019592841743082446f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.03370904143228949f, -0.019592841743082418f,
        0.0f, 0.035180330229250635f, -0.017860893165966545f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.035180330229250635f, -0.017860893165966545f,
        0.0f, 0.036512778335160985f, -0.01605845580339051f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.036512778335160985f, -0.01605845580339051f,
        0.0f, 0.03770112718608414f, -0.0141926430521691f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.037701127186084156f, -0.014192643052169074f,
        0.0f, 0.03874068691201048f, -0.012270818422822596f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.03874068691201048f, -0.012270818422822596f,
        0.0f, 0.039627354845631395f, -0.01030056647916492f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.03962735484563141f, -0.010300566479164892f,
        0.0f, 0.040357631713692964f, -0.008289662905495149f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.040357631713692964f, -0.008289662905495149f,
        0.0f, 0.0409286354470287f, -0.006246043819524156f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.0409286354470287f, -0.006246043819524156f,
        0.0f, 0.04133811255476991f, -0.004177774452143488f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.041338112554769914f, -0.004177774452143459f,
        0.0f, 0.041584447017844646f, -0.0020930173176437754f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.041584447017844646f, -0.0020930173176437754f,
        0.0f, 0.041666666666666664f, -8.164311994315688e-18f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.041666666666666664f, 2.144163532902182e-17f,
        0.0f, 0.041584447017844646f, 0.002093017317643789f,
        0.0f, 0.0f, 0.0f,

    };

    this->object = create3DObject(GL_TRIANGLES, 100*3, vertex_buffer_data, color, GL_FILL);
}

void Coins::draw(glm::mat4 VP) {
    Matrices.model = glm::mat4(1.0f);
    glm::mat4 translate = glm::translate (this->position);    // glTranslatef
    glm::mat4 rotate    = glm::rotate((float) (this->rotation * M_PI / 180.0f), glm::vec3(1, 0, 0));
    // No need as coords centered at 0, 0, 0 of cube arouund which we waant to rotate
    // rotate          = rotate * glm::translate(glm::vec3(0, -0.6, 0));
    Matrices.model *= (translate * rotate);
    glm::mat4 MVP = VP * Matrices.model;
    glUniformMatrix4fv(Matrices.MatrixID, 1, GL_FALSE, &MVP[0][0]);
    draw3DObject(this->object);
}

void Coins::set_position(float* arr){
    this->position = glm::vec3(0, arr[0]+0.25, (arr[3]+arr[1])/2);
    if(arr[0] >= 2.5){
        this->position = glm::vec3(0, arr[0]-0.25, (arr[3]+arr[1])/2);
    }
}

void Coins::tick() {
    // this->rotation += speed;
    // this->position.x -= speed;
    // this->position.y -= speed;
}