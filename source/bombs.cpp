#include "bombs.h"
#include "main.h"

Bombs::Bombs(float x, float y, color_t color) {
    this->position = glm::vec3(x, y, 0);
    this->rotation = 0;
    ratio_y = 7;
    ratio_z = 10;
    // Our vertices. Three consecutive floats give a 3D vertex; Three consecutive vertices give a triangle.
    // A cube has 6 faces with 2 triangles each, so this makes 6*2=12 triangles, and 12*3 vertices
    static const GLfloat vertex_buffer_data[] = {
        0.0f, 0.16633778807137858f, 0.00448503710923667f,
        0.0f, 0.16535245021907966f, 0.008952373826021733f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.16535245021907966f, 0.008952373826021733f,
        0.0f, 0.1637145417881148f, 0.013384379613266046f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.1637145417881148f, 0.013384379613266046f,
        0.0f, 0.16143052685477186f, 0.0177635633689182f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.16143052685477186f, 0.0177635633689182f,
        0.0f, 0.15850941938252558f, 0.022072642455353387f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.15850941938252558f, 0.022072642455353387f,
        0.0f, 0.1549627476480419f, 0.026294610906048423f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.15496274764804188f, 0.026294610906048427f,
        0.0f, 0.15080450874433657f, 0.030412806540362335f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.15080450874433657f, 0.030412806540362335f,
        0.0f, 0.14605111334064394f, 0.03441097672155109f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.14605111334064394f, 0.03441097672155109f,
        0.0f, 0.1407213209170025f, 0.038273342498499764f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.1407213209170025f, 0.038273342498499764f,
        0.0f, 0.1348361657291579f, 0.0419846608780338f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.1348361657291579f, 0.0419846608780338f,
        0.0f, 0.12841887379596487f, 0.04553028498204926f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.12841887379596487f, 0.045530284982049266f,
        0.0f, 0.12149477123690193f, 0.04889622185204919f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.12149477123690193f, 0.04889622185204919f,
        0.0f, 0.1140911843214481f, 0.05206918767295797f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.1140911843214481f, 0.05206918767295797f,
        0.0f, 0.10623733162478162f, 0.05503666019827066f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.1062373316247816f, 0.05503666019827066f,
        0.0f, 0.09796420871541217f, 0.0577869281696391f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.09796420871541217f, 0.0577869281696391f,
        0.0f, 0.08930446582983276f, 0.06030913753585822f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.08930446582983276f, 0.06030913753585822f,
        0.0f, 0.08029227901695253f, 0.0625933342888474f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.08029227901695253f, 0.0625933342888474f,
        0.0f, 0.07096321526084541f, 0.06463050374757283f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.07096321526084544f, 0.06463050374757283f,
        0.0f, 0.061354092114112975f, 0.06641260613487511f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.061354092114112975f, 0.06641260613487511f,
        0.0f, 0.051502832395824545f, 0.06793260830679669f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.05150283239582457f, 0.06793260830679668f,
        0.0f, 0.04144831452747579f, 0.06918451150918793f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.04144831452747579f, 0.06918451150918793f,
        0.0f, 0.031230219097620752f, 0.0701633750520492f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.031230219097620752f, 0.0701633750520492f,
        0.0f, 0.02088887226071734f, 0.07086533580817699f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.020888872260717378f, 0.07086533580817699f,
        0.0f, 0.010465086588218884f, 0.07128762345916226f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.010465086588218884f, 0.07128762345916226f,
        0.0f, -2.680204416127727e-17f, 0.07142857142857142f,
        0.0f, 0.0f, 0.0f,


        0.0f, -2.680204416127727e-17f, 0.07142857142857142f,
        0.0f, -0.010465086588218937f, 0.07128762345916226f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.0104650865882189f, 0.07128762345916226f,
        0.0f, -0.020888872260717395f, 0.07086533580817699f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.020888872260717395f, 0.07086533580817699f,
        0.0f, -0.031230219097620804f, 0.07016337505204918f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.031230219097620804f, 0.07016337505204918f,
        0.0f, -0.04144831452747585f, 0.06918451150918793f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.041448314527475806f, 0.06918451150918793f,
        0.0f, -0.051502832395824594f, 0.06793260830679668f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.051502832395824594f, 0.06793260830679668f,
        0.0f, -0.06135409211411303f, 0.0664126061348751f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.061354092114112996f, 0.0664126061348751f,
        0.0f, -0.07096321526084545f, 0.06463050374757282f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.07096321526084545f, 0.06463050374757282f,
        0.0f, -0.08029227901695257f, 0.06259333428884739f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.08029227901695257f, 0.06259333428884739f,
        0.0f, -0.08930446582983281f, 0.06030913753585821f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.08930446582983281f, 0.06030913753585821f,
        0.0f, -0.09796420871541224f, 0.05778692816963909f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.09796420871541217f, 0.0577869281696391f,
        0.0f, -0.10623733162478162f, 0.05503666019827066f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.10623733162478162f, 0.05503666019827066f,
        0.0f, -0.11409118432144812f, 0.05206918767295796f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.11409118432144812f, 0.05206918767295796f,
        0.0f, -0.12149477123690194f, 0.04889622185204918f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.12149477123690194f, 0.04889622185204918f,
        0.0f, -0.1284188737959649f, 0.04553028498204925f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.1284188737959649f, 0.04553028498204925f,
        0.0f, -0.13483616572915794f, 0.04198466087803377f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.13483616572915788f, 0.041984660878033805f,
        0.0f, -0.1407213209170025f, 0.038273342498499764f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.1407213209170025f, 0.038273342498499764f,
        0.0f, -0.14605111334064394f, 0.034410976721551086f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.14605111334064394f, 0.034410976721551086f,
        0.0f, -0.1508045087443366f, 0.03041280654036232f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.1508045087443366f, 0.03041280654036232f,
        0.0f, -0.1549627476480419f, 0.02629461090604841f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.1549627476480419f, 0.02629461090604841f,
        0.0f, -0.1585094193825256f, 0.022072642455353366f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.1585094193825256f, 0.022072642455353366f,
        0.0f, -0.16143052685477186f, 0.01776356336891817f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.16143052685477186f, 0.0177635633689182f,
        0.0f, -0.1637145417881148f, 0.01338437961326604f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.1637145417881148f, 0.01338437961326604f,
        0.0f, -0.16535245021907966f, 0.008952373826021721f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.16535245021907966f, 0.008952373826021721f,
        0.0f, -0.16633778807137858f, 0.004485037109236653f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.16633778807137858f, 0.004485037109236653f,
        0.0f, -0.16666666666666666f, -2.297318070966624e-17f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.16666666666666666f, -2.297318070966624e-17f,
        0.0f, -0.16633778807137858f, -0.0044850371092366986f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.16633778807137858f, -0.004485037109236667f,
        0.0f, -0.16535245021907966f, -0.008952373826021735f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.16535245021907966f, -0.008952373826021735f,
        0.0f, -0.16371454178811476f, -0.013384379613266054f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.16371454178811476f, -0.013384379613266054f,
        0.0f, -0.16143052685477186f, -0.017763563368918215f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.16143052685477186f, -0.017763563368918215f,
        0.0f, -0.15850941938252558f, -0.022072642455353408f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.15850941938252558f, -0.022072642455353408f,
        0.0f, -0.15496274764804188f, -0.02629461090604845f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.15496274764804188f, -0.02629461090604845f,
        0.0f, -0.15080450874433657f, -0.030412806540362363f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.15080450874433657f, -0.030412806540362332f,
        0.0f, -0.1460511133406439f, -0.0344109767215511f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.1460511133406439f, -0.0344109767215511f,
        0.0f, -0.14072132091700248f, -0.03827334249849977f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.14072132091700248f, -0.03827334249849977f,
        0.0f, -0.13483616572915788f, -0.04198466087803381f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.13483616572915788f, -0.04198466087803381f,
        0.0f, -0.12841887379596484f, -0.045530284982049286f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.12841887379596484f, -0.045530284982049286f,
        0.0f, -0.12149477123690187f, -0.04889622185204922f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.12149477123690193f, -0.04889622185204919f,
        0.0f, -0.1140911843214481f, -0.05206918767295797f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.1140911843214481f, -0.05206918767295797f,
        0.0f, -0.10623733162478159f, -0.05503666019827067f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.10623733162478159f, -0.05503666019827067f,
        0.0f, -0.09796420871541221f, -0.057786928169639096f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.09796420871541221f, -0.057786928169639096f,
        0.0f, -0.08930446582983285f, -0.060309137535858204f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.08930446582983272f, -0.06030913753585824f,
        0.0f, -0.08029227901695254f, -0.0625933342888474f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.08029227901695254f, -0.0625933342888474f,
        0.0f, -0.0709632152608455f, -0.06463050374757282f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.07096321526084536f, -0.06463050374757284f,
        0.0f, -0.06135409211411297f, -0.06641260613487511f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.06135409211411297f, -0.06641260613487511f,
        0.0f, -0.051502832395824594f, -0.06793260830679668f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.051502832395824594f, -0.06793260830679668f,
        0.0f, -0.04144831452747588f, -0.06918451150918793f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.04144831452747574f, -0.06918451150918795f,
        0.0f, -0.031230219097620773f, -0.0701633750520492f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.031230219097620773f, -0.0701633750520492f,
        0.0f, -0.020888872260717433f, -0.07086533580817699f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.020888872260717287f, -0.07086533580817699f,
        0.0f, -0.010465086588218868f, -0.07128762345916226f,
        0.0f, 0.0f, 0.0f,


        0.0f, -0.010465086588218868f, -0.07128762345916226f,
        0.0f, -3.061616997868383e-17f, -0.07142857142857142f,
        0.0f, 0.0f, 0.0f,


        0.0f, -3.061616997868383e-17f, -0.07142857142857142f,
        0.0f, 0.010465086588218805f, -0.07128762345916226f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.010465086588218953f, -0.07128762345916226f,
        0.0f, 0.02088887226071737f, -0.07086533580817699f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.02088887226071737f, -0.07086533580817699f,
        0.0f, 0.03123021909762071f, -0.0701633750520492f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.031230219097620856f, -0.07016337505204918f,
        0.0f, 0.04144831452747582f, -0.06918451150918793f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.04144831452747582f, -0.06918451150918793f,
        0.0f, 0.05150283239582454f, -0.06793260830679669f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.05150283239582454f, -0.06793260830679669f,
        0.0f, 0.061354092114112906f, -0.06641260613487511f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.061354092114113044f, -0.06641260613487508f,
        0.0f, 0.07096321526084544f, -0.06463050374757283f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.07096321526084544f, -0.06463050374757283f,
        0.0f, 0.08029227901695249f, -0.06259333428884742f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.08029227901695261f, -0.06259333428884738f,
        0.0f, 0.0893044658298328f, -0.06030913753585821f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.0893044658298328f, -0.06030913753585821f,
        0.0f, 0.09796420871541216f, -0.05778692816963911f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.09796420871541228f, -0.057786928169639075f,
        0.0f, 0.10623733162478166f, -0.055036660198270644f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.10623733162478166f, -0.055036660198270644f,
        0.0f, 0.1140911843214481f, -0.05206918767295797f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.1140911843214481f, -0.05206918767295797f,
        0.0f, 0.12149477123690187f, -0.04889622185204921f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.12149477123690199f, -0.048896221852049164f,
        0.0f, 0.1284188737959649f, -0.04553028498204926f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.1284188737959649f, -0.04553028498204926f,
        0.0f, 0.13483616572915788f, -0.04198466087803381f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.13483616572915796f, -0.04198466087803376f,
        0.0f, 0.14072132091700254f, -0.038273342498499736f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.14072132091700254f, -0.038273342498499736f,
        0.0f, 0.14605111334064394f, -0.03441097672155109f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.14605111334064394f, -0.03441097672155109f,
        0.0f, 0.15080450874433657f, -0.030412806540362356f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.15080450874433662f, -0.0304128065403623f,
        0.0f, 0.1549627476480419f, -0.02629461090604842f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.1549627476480419f, -0.02629461090604842f,
        0.0f, 0.15850941938252558f, -0.0220726424553534f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.15850941938252563f, -0.022072642455353342f,
        0.0f, 0.16143052685477186f, -0.017763563368918177f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.16143052685477186f, -0.017763563368918177f,
        0.0f, 0.1637145417881148f, -0.013384379613266049f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.1637145417881148f, -0.013384379613266049f,
        0.0f, 0.16535245021907963f, -0.008952373826021761f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.16535245021907966f, -0.008952373826021699f,
        0.0f, 0.16633778807137858f, -0.004485037109236661f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.16633778807137858f, -0.004485037109236661f,
        0.0f, 0.16666666666666666f, -1.7494954273533617e-17f,
        0.0f, 0.0f, 0.0f,


        0.0f, 0.16666666666666666f, 4.594636141933248e-17f,
        0.0f, 0.16633778807137858f, 0.004485037109236691f,
        0.0f, 0.0f, 0.0f,

        0.0f, 0.16633778807137858f, 0.00448503710923667f,
        0.0f, 0.16633778807137858f, 0.022072642455353387f,
        0.0, 0.2, 0.022072642455353387f,

        0.0f, 0.2, 0.022072642455353387f,
        0.0f, 0.16633778807137858f, 0.00448503710923667f,
        0.0, 0.2, 0.00448503710923667f,
    };

    this->object = create3DObject(GL_TRIANGLES, 102*3, vertex_buffer_data, color, GL_FILL);
}

void Bombs::draw(glm::mat4 VP) {
    Matrices.model = glm::mat4(1.0f);
    glm::mat4 translate = glm::translate (this->position);    // glTranslatef
    glm::mat4 rotate    = glm::rotate((float) (this->rotation * M_PI / 180.0f), glm::vec3(1, 0, 0));
    // No need as coords centered at 0, 0, 0 of cube arouund which we waant to rotate
    // rotate          = rotate * glm::translate(glm::vec3(0, -0.6, 0));
    Matrices.model *= (translate * rotate);
    glm::mat4 MVP = VP * Matrices.model;
    glUniformMatrix4fv(Matrices.MatrixID, 1, GL_FALSE, &MVP[0][0]);
    draw3DObject(this->object);
}

void Bombs::set_position(float* arr) {
    this->position = glm::vec3(0, arr[0]+0.25, (arr[3]+arr[1])/2);
    if(arr[0] >= 2.5){
        this->position = glm::vec3(0, arr[0]-0.25, (arr[3]+arr[1])/2);
    }
}

void Bombs::tick() {
    // this->rotation += speed;
    // this->position.x -= speed;
    // this->position.y -= speed;
}